apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'de.mannodermaus.android-junit5'

android {

    compileSdkVersion project.compileSdkVersion
    buildToolsVersion project.buildToolsVersion

    defaultConfig {
        minSdkVersion project.minSdkVersion
        targetSdkVersion project.targetSdkVersion
        versionCode project.versionCode
        versionName project.versionName

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        vectorDrawables.useSupportLibrary = true
    }

    buildTypes {
        release {
            debuggable false
        }

        debug {
//            debuggable false
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
        freeCompilerArgs += [ // TODO remove after coroutines became stable
            "-Xuse-experimental=kotlinx.coroutines.FlowPreview",
            "-Xuse-experimental=kotlinx.coroutines.ExperimentalCoroutinesApi",
            "-Xuse-experimental=kotlin.time.ExperimentalTime",
            "-Xuse-experimental=kotlin.ExperimentalStdlibApi",
        ]

//        allWarningsAsErrors = true
    }

    testOptions {
        unitTests {
            returnDefaultValues = true
        }
        unitTests.all {
            useJUnitPlatform()
        }
    }

    packagingOptions {
        exclude 'win32-x86-64/attach_hotspot_windows.dll'
        exclude 'win32-x86/attach_hotspot_windows.dll'
        exclude 'META-INF/AL2.0'
        exclude 'META-INF/LGPL2.1'
        exclude 'META-INF/licenses/ASM'
        exclude 'META-INF/LICENSE.md'
        exclude 'META-INF/LICENSE-notice.md'
    }
}

dependencies {
    implementation lib_core.coroutines
    implementation lib_core.coroutines_android

    // unit test
    testImplementation lib_core.coroutines_test
    testImplementation project(':test-shared')

    testImplementation lib_test.assertj
    testImplementation lib_test.junit
    testImplementation lib_test.junit_5
    testRuntimeOnly lib_test.junit_5_runtime
    testRuntimeOnly lib_test.junit_5_vintage // compatibility with junit4 rules and watchers

    testImplementation lib_test.mockk
    testImplementation lib_test.mockito // TODO migrate to mockK
    testImplementation lib_test.mockito_kotlin // TODO migrate to mockK

    testImplementation lib_test.robolectric

    // android test
    androidTestImplementation lib_core.coroutines_test
    androidTestImplementation project(':test-shared')

    androidTestImplementation lib_test.assertj
    androidTestImplementation lib_test.junit

    androidTestImplementation lib_android_test.mockk

    androidTestImplementation lib_android_test.runner
    androidTestImplementation lib_android_test.rules
}

kapt {
    correctErrorTypes true
}