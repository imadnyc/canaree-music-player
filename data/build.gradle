plugins {
    id("com.android.library")
    id("kotlin-android")
    id("kotlin-kapt")
    id("dev.olog.msc.hilt")
}
apply from: '../base_module.gradle'

def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

android {

    defaultConfig {
        consumerProguardFiles 'consumer-rules.pro'

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [
                        "room.schemaLocation"  : "$projectDir/schemas".toString(),
                        "room.incremental"     : "true",
                        "room.expandProjection": "true"
                ]
            }
        }

        buildConfigField 'String', "LAST_FM_KEY", localProperties.last_fm_key
        buildConfigField 'String', "LAST_FM_SECRET", localProperties.last_fm_secret
    }

    sourceSets {
        androidTest.assets.srcDirs += files("$projectDir/schemas".toString())
    }

//    kotlinOptions.allWarningsAsErrors = true
}

dependencies {
    implementation project(':core')
    implementation project(':shared')
    implementation project(':prefs-keys')

    implementation lib_core.coroutines
    implementation lib_core.coroutines_android

    implementation lib_x.core_ktx
    implementation lib_x.preference

    implementation lib_utils.fuzzy
    implementation lib_network.gson
    implementation lib_network.retrofit
    implementation lib_network.retrofit_gson
    implementation lib_network.ok_http
    implementation lib_network.ok_http_interceptor

    implementation lib_data.sql_content_resolver
    implementation lib_data.room
    implementation lib_data.room_ktx
    kapt lib_data.room_processor

}
