package dev.olog.data.collection

import dev.olog.core.collection.Album
import dev.olog.core.MediaUri

// TODO for some reason is not autogenerated
data class Albums_view(
    val id: String,
    val author_id: String,
    val title: String,
    val author: String,
    val songs: Long,
    val directory: String,
    val dateAdded: Long
)

// TODO for some reason is not autogenerated
data class Podcast_collections_view(
    val id: String,
    val author_id: String,
    val title: String,
    val author: String,
    val songs: Long,
    val directory: String,
    val dateAdded: Long
)

internal fun Albums_view.toDomain() = Album(
    uri = MediaUri.invoke(
        source = MediaUri.Source.MediaStore,
        category = MediaUri.Category.Collection,
        id = id,
        isPodcast = false
    ),
    artistUri = MediaUri.invoke(
        source = MediaUri.Source.MediaStore,
        category = MediaUri.Category.Author,
        id = author_id,
        isPodcast = false
    ),
    title = title,
    artist = author,
    songs = songs.toInt(),
    directory = directory,
)

internal fun Podcast_collections_view.toDomain() = Album(
    uri = MediaUri.invoke(
        source = MediaUri.Source.MediaStore,
        category = MediaUri.Category.Collection,
        id = id,
        isPodcast = true
    ),
    artistUri = MediaUri.invoke(
        source = MediaUri.Source.MediaStore,
        category = MediaUri.Category.Author,
        id = author_id,
        isPodcast = true
    ),
    title = title,
    artist = author,
    songs = songs.toInt(),
    directory = directory,
)