import dev.olog.core.entity.sort.SortDirection;
import dev.olog.data.sort.SortTypeEntity;
import dev.olog.data.sort.SortTable;

CREATE TABLE IF NOT EXISTS sort (
    table_name TEXT AS SortTable
        CHECK (table_name IN (
            'folders', 'playlists', 'songs', 'artists', 'albums', 'genres',
            'podcast_playlists', 'podcast_episodes', 'podcast_authors', 'podcast_collections',
            'folders_songs', 'playlists_songs', 'artists_songs', 'albums_songs', 'genres_songs',
            'podcast_playlists_episodes', 'podcast_authors_episodes', 'podcast_collections_episodes'
        ))
        NOT NULL,
    column_name TEXT AS SortTypeEntity
        CHECK (column_name IN ('title', 'author', 'collection', 'album_artist', 'duration', 'date_added', 'track_number', 'custom'))
        NOT NULL,
    direction TEXT AS SortDirection
        CHECK (direction IN ('asc', 'desc'))
        NOT NULL,
    PRIMARY KEY(table_name)
);

INSERT INTO sort (table_name, column_name, direction)
VALUES
    --all songs
    ('folders', 'title', 'asc'),
    ('playlists', 'title', 'asc'),
    ('songs', 'title', 'asc'),
    ('artists', 'author', 'asc'),
    ('albums', 'collection', 'asc'),
    ('genres', 'title', 'asc'),
    --all podcasts
    ('podcast_playlists', 'title', 'asc'),
    ('podcast_episodes', 'title', 'asc'),
    ('podcast_authors', 'author', 'asc'),
    ('podcast_collections', 'collection', 'asc'),
    --songs
    ('folders_songs', 'title', 'asc'),
        ('playlists_songs', 'custom', 'asc'),
    ('artists_songs', 'title', 'asc'),
    ('albums_songs', 'title', 'asc'),
    ('genres_songs', 'title', 'asc'),
    --podcasts
    ('podcast_playlists_episodes', 'custom', 'asc'),
    ('podcast_authors_episodes', 'title', 'asc'),
    ('podcast_collections_episodes', 'title', 'asc');

-- songs
replace:
REPLACE INTO sort VALUES ?;
select:
SELECT * FROM sort WHERE table_name = ?;