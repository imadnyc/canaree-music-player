selectAll:
SELECT * FROM folders_view;

selectAllSorted:
SELECT * FROM sorted_folders_view;

selectById:
SELECT * FROM folders_view WHERE directory = ?;

selectTracksByIdSorted:
SELECT songs_view.*
FROM songs_view
    LEFT JOIN sort ON TRUE
WHERE directory = ? AND sort.table_name = 'folders_songs'
ORDER BY
-- author, then title
CASE WHEN sort.column_name = 'author' AND author = '<unknown>' THEN -1 END, -- when unknown move last TODO test performance
CASE WHEN sort.column_name = 'author' AND sort.direction = 'asc' THEN lower(author) END COLLATE LOCALIZED ASC,
CASE WHEN sort.column_name = 'author' AND sort.direction = 'desc' THEN lower(author) END COLLATE LOCALIZED DESC,
-- album, then title
CASE WHEN sort.column_name = 'collection' AND collection = '<unknown>' THEN -1 END, -- when unknown move last TODO test performance
CASE WHEN sort.column_name = 'collection' AND sort.direction = 'asc' THEN lower(collection) END COLLATE LOCALIZED ASC,
CASE WHEN sort.column_name = 'collection' AND sort.direction = 'desc' THEN lower(collection) END COLLATE LOCALIZED DESC,
-- album artist, then title
CASE WHEN sort.column_name = 'album_artist' AND album_artist = '<unknown>' THEN -1 END, -- when unknown move last TODO test performance
CASE WHEN sort.column_name = 'album_artist' AND sort.direction = 'asc' THEN lower(album_artist) END COLLATE LOCALIZED ASC,
CASE WHEN sort.column_name = 'album_artist' AND sort.direction = 'desc' THEN lower(album_artist) END COLLATE LOCALIZED DESC,
-- duration, then title
CASE WHEN sort.column_name = 'duration' AND sort.direction = 'asc' THEN duration END ASC,
CASE WHEN sort.column_name = 'duration' AND sort.direction = 'desc' THEN duration END DESC,
-- date added, then title
CASE WHEN sort.column_name = 'date_added' AND sort.direction = 'asc' THEN date_added END DESC,
CASE WHEN sort.column_name = 'date_added' AND sort.direction = 'desc' THEN date_added END ASC,
-- disc number, track number, then title
CASE WHEN sort.column_name = 'track_number' AND sort.direction = 'asc' THEN disc_number END ASC,
CASE WHEN sort.column_name = 'track_number' AND sort.direction = 'asc' THEN track_number END ASC,
CASE WHEN sort.column_name = 'track_number' AND sort.direction = 'desc' THEN disc_number END DESC,
CASE WHEN sort.column_name = 'track_number' AND sort.direction = 'desc' THEN track_number END DESC,

-- default, and second sort
-- also, CASE WHEN sort.column_name = 'title' AND sort.direction = 'asc'
CASE WHEN sort.direction = 'asc' THEN lower(title) END COLLATE LOCALIZED ASC,
CASE WHEN sort.direction = 'desc' THEN lower(title) END COLLATE LOCALIZED DESC;

selectMostPlayed:
SELECT songs_view.*, counter
FROM songs_view
    JOIN most_player_folder ON songs_view.id = most_player_folder.song_id
WHERE most_player_folder.counter >= 5 AND most_player_folder.directory = ?
ORDER BY counter DESC, lower(title) COLLATE LOCALIZED DESC
LIMIT 10;

incrementMostPlayed: --increment counter by 1
REPLACE INTO most_player_folder VALUES (
    :id,
    :dir,
    COALESCE((SELECT counter FROM most_player_folder WHERE song_id = :id AND directory = :dir), 0) + 1
);

selectRecentlyAddedSongs:
SELECT *
FROM songs_view
WHERE directory = ? AND strftime('%s','now') - date_added < 1209600 -- two weeks in seconds, keep in sync with others
ORDER BY date_added DESC;

selectRelatedArtists:
SELECT *
FROM artists_view
WHERE directory = ?
ORDER BY lower(name) COLLATE LOCALIZED ASC;

selectSiblings:
SELECT *
FROM folders_view
WHERE directory != ?
ORDER BY lower(directory) COLLATE LOCALIZED ASC;

selectAllBlacklistedIncluded: --return all folders, even those blacklisted
SELECT DISTINCT directory, count(*) AS songs, date_added
FROM indexed_playables
WHERE is_podcast = 0
GROUP BY directory
ORDER BY lower(directory) COLLATE LOCALIZED ASC;