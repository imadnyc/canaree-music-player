selectAll:
SELECT * FROM genres_view;

selectAllSorted:
SELECT * FROM sorted_genres_view;

selectById:
SELECT * FROM genres_view WHERE id = ?;

selectTracksByIdSorted:
SELECT genres_playables_view.*
FROM genres_playables_view
    LEFT JOIN sort ON TRUE
WHERE genres_playables_view.genre_id = :genre_id AND sort.table_name = 'genres_songs'
ORDER BY
-- author, then title
CASE WHEN sort.column_name = 'author' AND author = '<unknown>' THEN -1 END, -- when unknown move last TODO test performance
CASE WHEN sort.column_name = 'author' AND sort.direction = 'asc' THEN lower(author) END COLLATE LOCALIZED ASC,
CASE WHEN sort.column_name = 'author' AND sort.direction = 'desc' THEN lower(author) END COLLATE LOCALIZED DESC,
-- album, then title
CASE WHEN sort.column_name = 'collection' AND collection = '<unknown>' THEN -1 END, -- when unknown move last TODO test performance
CASE WHEN sort.column_name = 'collection' AND sort.direction = 'asc' THEN lower(collection) END COLLATE LOCALIZED ASC,
CASE WHEN sort.column_name = 'collection' AND sort.direction = 'desc' THEN lower(collection) END COLLATE LOCALIZED DESC,
-- album artist, then title
CASE WHEN sort.column_name = 'album_artist' AND album_artist = '<unknown>' THEN -1 END, -- when unknown move last TODO test performance
CASE WHEN sort.column_name = 'album_artist' AND sort.direction = 'asc' THEN lower(album_artist) END COLLATE LOCALIZED ASC,
CASE WHEN sort.column_name = 'album_artist' AND sort.direction = 'desc' THEN lower(album_artist) END COLLATE LOCALIZED DESC,
-- duration, then title
CASE WHEN sort.column_name = 'duration' AND sort.direction = 'asc' THEN duration END ASC,
CASE WHEN sort.column_name = 'duration' AND sort.direction = 'desc' THEN duration END DESC,
-- date added, then title
CASE WHEN sort.column_name = 'date_added' AND sort.direction = 'asc' THEN date_added END DESC,
CASE WHEN sort.column_name = 'date_added' AND sort.direction = 'desc' THEN date_added END ASC,

-- default, and second sort
-- also, CASE WHEN sort.column_name = 'title' AND sort.direction = 'asc'
CASE WHEN sort.direction = 'asc' THEN lower(title) END COLLATE LOCALIZED ASC,
CASE WHEN sort.direction = 'desc' THEN lower(title) END COLLATE LOCALIZED DESC;

selectMostPlayed:
SELECT songs_view.*, counter
FROM songs_view
    JOIN most_played_genre ON songs_view.id = most_played_genre.song_id
WHERE most_played_genre.counter >= 5 AND most_played_genre.genre_id = ?
ORDER BY counter DESC, lower(title) COLLATE LOCALIZED DESC
LIMIT 10;

incrementMostPlayed: --increment counter by 1
REPLACE INTO most_played_genre VALUES (
    :songId,
    :genreId,
    COALESCE((SELECT counter FROM most_played_genre WHERE song_id = :songId AND genre_id = :genreId), 0) + 1
);

selectRecentlyAddedSongs:
SELECT *
FROM genres_playables_view
WHERE genre_id = ? AND strftime('%s','now') - date_added < 1209600 -- two weeks in seconds, keep in sync with others
ORDER BY date_added DESC;

selectRelatedArtists:
SELECT DISTINCT genres_playables_view.author_id, genres_playables_view.author, genres_playables_view.album_artist, count(*) AS songs
FROM genres_playables_view
WHERE genre_id = :genre_id
GROUP BY author_id
ORDER BY lower(author) COLLATE LOCALIZED ASC;

selectSiblings:
SELECT *
FROM genres_view
WHERE id != ?
ORDER BY lower(name) COLLATE LOCALIZED ASC;
